version: '3.9'
services:


  db:
    image: postgres:latest
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: database_dashboard
    depends_on:
      - db
    restart: always
    ports:
      - 8080:8080

  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2

#  kafka-ui:
#    container_name: kafka-ui
#    image: provectuslabs/kafka-ui:latest
#    depends_on:
#      - kafka
#    ports:
#      - 8081:8080
#    environment:
#      DYNAMIC_CONFIG_ENABLED: 'true'
#      LOGGING_LEVEL_ROOT: 'DEBUG'
#    volumes:
#      - /c/tools/kafka/kui/config.yml:/etc/kafkaui/dynamic_config.yaml

volumes:
  pgdata:
  kafka_data:
    driver: local